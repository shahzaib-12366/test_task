{"ast":null,"code":"// blogViews.js\n\n// Define action types\nconst INCREMENT_BLOG_VIEWS = 'INCREMENT_BLOG_VIEWS';\n\n// Define action creators\nexport const incrementBlogViews = blogId => ({\n  type: INCREMENT_BLOG_VIEWS,\n  payload: blogId\n});\n\n// Define the initial state\nconst initialState = {};\n\n// Define the reducer\nconst blogViewsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_BLOG_VIEWS:\n      const {\n        payload\n      } = action;\n      return {\n        ...state,\n        [payload]: (state[payload] || 0) + 1\n      };\n    default:\n      return state;\n  }\n};\nexport default blogViewsReducer;","map":{"version":3,"names":["INCREMENT_BLOG_VIEWS","incrementBlogViews","blogId","type","payload","initialState","blogViewsReducer","state","action"],"sources":["/home/react/Documents/Projects/abiz sol/test_task/src/component/blogViews/BlogDetail.js"],"sourcesContent":["// blogViews.js\n\n// Define action types\nconst INCREMENT_BLOG_VIEWS = 'INCREMENT_BLOG_VIEWS';\n\n// Define action creators\nexport const incrementBlogViews = (blogId) => ({\n  type: INCREMENT_BLOG_VIEWS,\n  payload: blogId,\n});\n\n// Define the initial state\nconst initialState = {};\n\n// Define the reducer\nconst blogViewsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_BLOG_VIEWS:\n      const { payload } = action;\n      return {\n        ...state,\n        [payload]: (state[payload] || 0) + 1,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blogViewsReducer;\n"],"mappings":"AAAA;;AAEA;AACA,MAAMA,oBAAoB,GAAG,sBAAsB;;AAEnD;AACA,OAAO,MAAMC,kBAAkB,GAAIC,MAAM,KAAM;EAC7CC,IAAI,EAAEH,oBAAoB;EAC1BI,OAAO,EAAEF;AACX,CAAC,CAAC;;AAEF;AACA,MAAMG,YAAY,GAAG,CAAC,CAAC;;AAEvB;AACA,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,KAAK;EACzD,QAAQA,MAAM,CAACL,IAAI;IACjB,KAAKH,oBAAoB;MACvB,MAAM;QAAEI;MAAQ,CAAC,GAAGI,MAAM;MAC1B,OAAO;QACL,GAAGD,KAAK;QACR,CAACH,OAAO,GAAG,CAACG,KAAK,CAACH,OAAO,CAAC,IAAI,CAAC,IAAI;MACrC,CAAC;IACH;MACE,OAAOG,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}